<!-- This is the generated HTML sent from the server -->
<form method="GET" action="/users/logoutUser">
  <button type="submit">Logout</button>
</form>
<form method="GET" action="/posts/createPost">
  <button type="submit">Create a post</button>
</form>
<% posts.forEach(post => { %>
  <h6><%= post._id %></h6>
  <h4><%= post.title %></h4>
  <p><%= post.caption %></p>
  <h5>Owner: <%= post.author %></h5>
  <img src="<%= post.picture.url %>" alt="postpicture">

  <form method="POST" action="/likes/<%= post._id %>">
    <button type="submit">Like</button>
  </form>

  <% post.likes?.forEach(like => { %>
    <p>Likes: <%= like?._id %></p>
  <% }); %>

  <p>liked by <%= post.likes.length %></p>

<form id="commentform-<%= post._id %>" data-post="<%= post._id %>" >
  <label for="comment-input-<%= post._id %>">Enter your comment:</label>
  <input type="text" id="comment-input-<%= post._id %>" name="comment"
    value="<%= typeof name != 'undefined' ? comment : '' %>">
  <button type="submit">Submit</button>
</form>
  <% post.comments?.forEach(comment => { %>
    <div id="message-container-<%= post._id %>">
      <p>Comment: <%= comment.text %>
      </p>
      <p>Comment ID: <%= comment._id %>
      </p>
      </div>

    <hr/>
  <% }); %>
  <p id="comment-count-<%= post._id %>">Comments: <%= post.comments.length %></p>
  <hr/>
<% }); %>
<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.3.1/socket.io.js"></script>
<script type="text/javascript">
  function displayMessage(postId, comment) {
    console.log("thsi"+ postId, 'thiss'+comment);
      const messageContainer = document.getElementById(`message-container-${postId}`);
      console.log(messageContainer)
      messageContainer.innerHTML += `
    <p>Comment: ${comment.text}</p>
    <p>Comment ID: ${comment._id}</p>
    `;
      const commentsCount = document.getElementById(`comments-count-${postId}`);
      commentsCount.innerHTML = `Comments: ${commentsCount.innerHTML.split(' ')[1] + 1}`;
    }
   const socket = io('http://localhost:3000');
    const commentForms = document.querySelectorAll('form[id^="commentform"]');
      commentForms.forEach(form => {
        form.addEventListener('submit', event => {
          event.preventDefault(); // Prevent form from submitting
          const commentInput = form.querySelector('input[name="comment"]');
          const postId = form.getAttribute('data-post');
          const comment = commentInput.value;
          socket.emit("newComment", postId, comment);
          commentInput.value = ''; // Clear comment input after submitting
        });
      });
        socket.on('commented', (postId, comment) => {
            console.log('New comment brooooo:', postId, comment);
            displayMessage(postId, comment);
          });
</script>

